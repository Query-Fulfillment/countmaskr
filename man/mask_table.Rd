% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mask_table.R
\name{mask_table}
\alias{mask_table}
\title{Apply Threshold-Based Masking to a Data Frame}
\usage{
mask_table(
  data,
  threshold = 11,
  col_groups,
  group_by = NULL,
  overwrite_columns = TRUE,
  percentages = FALSE,
  zero_masking = FALSE,
  secondary_cell = "min",
  .verbose = FALSE
)
}
\arguments{
\item{data}{A data frame containing the counts to be masked. Must be a data frame.}

\item{threshold}{A positive numeric value specifying the threshold below which values must be suppressed. Default is 11.}

\item{col_groups}{A character vector or a list of character vectors, where each character vector specifies columns in \code{data} to which masking should be applied.}

\item{group_by}{An optional character string specifying a column name in \code{data} to group the data by before masking.}

\item{overwrite_columns}{Logical; if \code{TRUE}, the original columns are overwritten with masked counts. If \code{FALSE}, new columns are added with masked counts. Default is \code{TRUE}.}

\item{percentages}{Logical; if \code{TRUE}, percentages are calculated and masked accordingly. Default is \code{FALSE}.}

\item{zero_masking}{Logical; if \code{TRUE}, zeros can be masked as secondary cells when present. Passed to \code{mask_counts}. Default is \code{FALSE}.}

\item{secondary_cell}{Character string specifying the method for selecting secondary cells when necessary. Options are \code{"min"}, \code{"max"}, or \code{"random"}. Passed to \code{mask_counts}. Default is \code{"min"}.}

\item{.verbose}{Logical; if \code{TRUE}, progress messages are printed during masking. Default is \code{FALSE}.}
}
\value{
A data frame with masked counts in specified columns. If \code{percentages = TRUE}, additional columns with percentages are added. The structure of the returned data frame depends on the \code{overwrite_columns} parameter.
}
\description{
The \code{mask_table} function applies threshold-based masking to specified columns in a data frame.
It uses the \code{mask_counts} function to mask counts that are below a certain threshold, adhering
to data privacy requirements. The function can handle grouped data and calculate percentages if required.
It ensures convergence by checking specific criteria after each iteration.
}
\examples{
data("countmaskr_data")

aggregate_table <- countmaskr_data \%>\%
  select(-c(id, age)) \%>\%
  gather(block, Characteristics) \%>\%
  group_by(block, Characteristics) \%>\%
  summarise(N = n()) \%>\%
  ungroup()

mask_table(aggregate_table,
  group_by = "block",
  col_groups = list("N")
)

mask_table(aggregate_table,
  group_by = "block",
  col_groups = list("N"),
  overwrite_columns = FALSE,
  percentages = TRUE
)

countmaskr_data \%>\%
  count(race, gender) \%>\%
  pivot_wider(names_from = gender, values_from = n) \%>\%
  mutate(across(all_of(c("Male", "Other")), ~ ifelse(is.na(.), 0, .)),
    Overall = Female + Male + Other, .after = 1
  ) \%>\%
  countmaskr::mask_table(.,
    col_groups = list(c("Overall", "Female", "Male", "Other")),
    overwrite_columns = TRUE,
    percentages = FALSE
  )

}
\seealso{
\code{\link{mask_counts}}
}
