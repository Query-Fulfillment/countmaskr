% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mask_table.R
\name{mask_table}
\alias{mask_table}
\title{Function to apply cell suppression methods on a two-by-two tables}
\usage{
mask_table(
  data,
  threshold = 11,
  col_groups,
  group_by = NULL,
  overwrite_columns = TRUE,
  percentages = FALSE,
  zero_masking = FALSE,
  .verbose = FALSE
)
}
\arguments{
\item{data}{input data with a column that has counts which need suppression}

\item{threshold}{threshold value for suppression for the threshold_suppression() function. defaulted to 11}

\item{col_groups}{columns that requires suppression. If two way tables. enter columns groups that require row-wise suppression as list()}

\item{group_by}{variable name to group the masking by}

\item{overwrite_columns}{Boolean parameter to overwrite columns}

\item{percentages}{Boolean parameter for generate masked percentages, naming convention: 'col_perc_masked'}

\item{zero_masking}{Boolean parameter to mask 0 as secondary cell when present}

\item{.verbose}{Boolean parameter to log steps of masking in the console}
}
\value{
a tibble with row and column wise masking. masked columns will return as character vector
}
\description{
This is a multi-tasking function to convert a simple table 1 with counts and percentages both  -masked and unmasked
}
\details{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
}
\examples{

data("countmaskr_data")

aggregate_table <- countmaskr_data \%>\%
  select(-c(id, age)) \%>\%
  gather(block, Characteristics) \%>\%
  group_by(block, Characteristics) \%>\%
  summarise(N = n()) \%>\%
  ungroup()

mask_table(aggregate_table,
  group_by = "block",
  col_groups = list("N")
)

mask_table(aggregate_table,
  group_by = "block",
  col_groups = list("N"),
  overwrite_columns = FALSE,
  percentages = TRUE
)

countmaskr_data \%>\%
  count(race, gender) \%>\%
  pivot_wider(names_from = gender, values_from = n) \%>\%
  mutate(across(all_of(c("Male", "Other")), ~ ifelse(is.na(.), 0, .)),
    Overall = Female + Male + Other, .after = 1
  ) \%>\%
  countmaskr::mask_table(.,
    col_groups = list(c("Overall", "Female", "Male", "Other")),
    overwrite_columns = TRUE,
    percentages = FALSE
  )

}
